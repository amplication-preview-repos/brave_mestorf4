/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import { Prisma, Mensagens as PrismaMensagens } from "@prisma/client";

export class MensagensServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(
    args: Omit<Prisma.MensagensCountArgs, "select">
  ): Promise<number> {
    return this.prisma.mensagens.count(args);
  }

  async mensagensItems(
    args: Prisma.MensagensFindManyArgs
  ): Promise<PrismaMensagens[]> {
    return this.prisma.mensagens.findMany(args);
  }
  async mensagens(
    args: Prisma.MensagensFindUniqueArgs
  ): Promise<PrismaMensagens | null> {
    return this.prisma.mensagens.findUnique(args);
  }
  async createMensagens(
    args: Prisma.MensagensCreateArgs
  ): Promise<PrismaMensagens> {
    return this.prisma.mensagens.create(args);
  }
  async updateMensagens(
    args: Prisma.MensagensUpdateArgs
  ): Promise<PrismaMensagens> {
    return this.prisma.mensagens.update(args);
  }
  async deleteMensagens(
    args: Prisma.MensagensDeleteArgs
  ): Promise<PrismaMensagens> {
    return this.prisma.mensagens.delete(args);
  }
}
