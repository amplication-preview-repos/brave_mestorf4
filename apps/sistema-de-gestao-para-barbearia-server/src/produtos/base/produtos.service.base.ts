/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import { Prisma, Produtos as PrismaProdutos } from "@prisma/client";

export class ProdutosServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(args: Omit<Prisma.ProdutosCountArgs, "select">): Promise<number> {
    return this.prisma.produtos.count(args);
  }

  async produtosItems(
    args: Prisma.ProdutosFindManyArgs
  ): Promise<PrismaProdutos[]> {
    return this.prisma.produtos.findMany(args);
  }
  async produtos(
    args: Prisma.ProdutosFindUniqueArgs
  ): Promise<PrismaProdutos | null> {
    return this.prisma.produtos.findUnique(args);
  }
  async createProdutos(
    args: Prisma.ProdutosCreateArgs
  ): Promise<PrismaProdutos> {
    return this.prisma.produtos.create(args);
  }
  async updateProdutos(
    args: Prisma.ProdutosUpdateArgs
  ): Promise<PrismaProdutos> {
    return this.prisma.produtos.update(args);
  }
  async deleteProdutos(
    args: Prisma.ProdutosDeleteArgs
  ): Promise<PrismaProdutos> {
    return this.prisma.produtos.delete(args);
  }
}
