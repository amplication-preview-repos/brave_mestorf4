/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import {
  Prisma,
  Transacoes as PrismaTransacoes,
  Clientes as PrismaClientes,
} from "@prisma/client";

export class TransacoesServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(
    args: Omit<Prisma.TransacoesCountArgs, "select">
  ): Promise<number> {
    return this.prisma.transacoes.count(args);
  }

  async transacoesItems(
    args: Prisma.TransacoesFindManyArgs
  ): Promise<PrismaTransacoes[]> {
    return this.prisma.transacoes.findMany(args);
  }
  async transacoes(
    args: Prisma.TransacoesFindUniqueArgs
  ): Promise<PrismaTransacoes | null> {
    return this.prisma.transacoes.findUnique(args);
  }
  async createTransacoes(
    args: Prisma.TransacoesCreateArgs
  ): Promise<PrismaTransacoes> {
    return this.prisma.transacoes.create(args);
  }
  async updateTransacoes(
    args: Prisma.TransacoesUpdateArgs
  ): Promise<PrismaTransacoes> {
    return this.prisma.transacoes.update(args);
  }
  async deleteTransacoes(
    args: Prisma.TransacoesDeleteArgs
  ): Promise<PrismaTransacoes> {
    return this.prisma.transacoes.delete(args);
  }

  async getCliente(parentId: string): Promise<PrismaClientes | null> {
    return this.prisma.transacoes
      .findUnique({
        where: { id: parentId },
      })
      .cliente();
  }
}
